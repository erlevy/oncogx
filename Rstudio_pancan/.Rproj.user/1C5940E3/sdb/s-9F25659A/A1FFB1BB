{
    "collab_server" : "",
    "contents" : "library(GSVA)\nlibrary(heatmap.plus)\nlibrary(gplots)\n\nexpression_dir <- \"/Users/Eric/tcrseq/new/expression\"\nfiles_expression <- list.files(path=expression_dir, pattern=\"*.txt\", full.names=T, recursive=FALSE)\nbrca_expression <- read.csv(files_expression[3], sep=\"\\t\")\n\nsignatures_dir <- \"/Users/Eric/jack/IFN/signatures\"\nfiles_signatures <- list.files(path=signatures_dir, pattern=\"*.txt\", full.names=T, recursive=FALSE)\n\nFan <- as.character(as.matrix(read.table(files_signatures[1])))\nReactome <- as.character(as.matrix(read.table(files_signatures[2])))\nRody <- as.character(as.matrix(read.table(files_signatures[3])))\nTeschendorff <- as.character(as.matrix(read.table(files_signatures[4])))\n\nall_signatures <- list(Fan, Reactome, Rody, Teschendorff)\nall_signature_names <- c(\"Fan\", \"Reactome\", \"Rody\", \"Teschendorff\")\nnames(all_signatures) <- all_signature_names\n  \ndata_expression <- brca_expression[-1,]\ndata_expression <- as.matrix(data_expression)\nrownames(data_expression) <- data_expression[,1]\ndata_expression <- data_expression[,-1]\nmode(data_expression) <- 'numeric'\ngene_names <- rownames(data_expression)\ngene_names <- strsplit(gene_names, \"|\", fixed=TRUE)\ngene_names <- sapply(gene_names, \"[\", 1)\nrownames(data_expression) <- gene_names\n\nes.dif_full <- gsva(data_expression, all_signatures, mx.diff=TRUE, verbose=FALSE, parallel.sz=1)\nes.dif <- es.dif_full$es.obs\n\nheatmap.plus(t(as.matrix(es.dif)), col=bluered(51), scale=\"none\", labRow=\"\", cexCol=0.85)\n\n### run ifn_by_purity first\nes.dif_names <- colnames(es.dif)\nes.dif_names <- substr(es.dif_names, 1, 16)\nes.dif_names <- gsub(\".\", \"-\", es.dif_names, fixed=TRUE)\ngsva_mat <- matrix(NA, nrow=nrow(results_all), ncol=4)\nfor (i in 1:nrow(results_all))\n{\n  sample_id <- as.character(results_all$sample_id[i])\n  barcode <- substr(sample_id,1,16)\n  matching_gsva <- which(es.dif_names==barcode)\n  if (length(matching_gsva>0)) {\n    gsva_patient <- es.dif[,matching_gsva]\n    gsva_mat[i,] <- gsva_patient\n  }\n}\ncolnames(gsva_mat) <- rownames(es.dif)\nresults_gsva <- cbind(results_all, gsva_mat)\n\n# hierarchical cluster analysis\nsignatures <- results_gsva[,c(\"Fan\", \"Reactome\", \"Rody\", \"Teschendorff\")]\nd <- dist(as.matrix(signatures))\nhc <- hclust(d)\nplot(hc, labels=FALSE)\nmycl <- cutree(hc, h=2.5)\n#mycl <- cutree(hc, h=max(hc$height/1.5))\n\nresults_hc <- cbind(results_gsva, mycl)\n\nmycl_named <- mycl\nmycl_named[which(mycl==1)] <- 1\nmycl_named[which(mycl==2)] <- 0\nresults_hc <- cbind(results_hc, mycl_named)\n\n# compare gsva to clinical\npn_split <- split(results_hc$mycl_named, results_hc$pn_tumor)\npt_split <- split(results_hc$mycl_named, results_hc$pt_tumor)\nstage_split <- split(results_hc$mycl_named, results_hc$stage_tumor)\nsubtype_split <- split(results_hc$mycl_named, results_hc$clinical_group)\n\npt_split$other <- NULL\nstage_split$other <- NULL\nsubtype_split$other <- NULL\n\npn_table <- sapply(pn_split, table)\npt_table <- sapply(pt_split, table)\nstage_table <- sapply(stage_split, table)\nsubtype_table <- sapply(subtype_split, table)\n\npn_chi <- chisq.test(pn_table)\npt_chi <- chisq.test(pt_table)\nstage_chi <- chisq.test(stage_table)\nsubtype_chi <- chisq.test(subtype_table)\n\npn_percent <- prop.table(pn_table, 2)\npt_percent <- prop.table(pt_table, 2)\nstage_percent <- prop.table(stage_table, 2)\nsubtype_percent <- prop.table(subtype_table, 2)\n\nbarplot(pn_percent, col=c(\"darkblue\", \"red\"), legend=c(\"IFN Signature Low\", \"IFN Signature High\"), ylab=\"Percent high/low\")\nbarplot(pt_percent, col=c(\"darkblue\", \"red\"), legend=c(\"IFN Signature Low\", \"IFN Signature High\"), ylab=\"Percent high/low\")\nbarplot(stage_percent, col=c(\"darkblue\", \"red\"), legend=c(\"IFN Signature Low\", \"IFN Signature High\"), ylab=\"Percent high/low\")\nbarplot(subtype_percent, col=c(\"darkblue\", \"red\"), legend=c(\"IFN Signature Low\", \"IFN Signature High\"), ylab=\"Percent high/low\")\n\n### tnbc\nclinical_clust <- split(results_hc, results_hc$clinical_group)\ntnbc_hc <- clinical_clust[[4]]\n\n# survival\nsurv <- tnbc_hc[,c(\"mycl_named\", \"days\", \"vital\")]\nsurv$days <- surv$days/365\nmy.surv <- Surv(as.numeric(surv[,2]), as.numeric(surv[,3]))\nmy.fit <- survfit(my.surv ~ surv[,1])\nplot(my.fit, col=c(\"darkblue\",\"red\"), xlab=\"Survival Time (years)\", ylab=\"Survival Probability\",\n     main=\"Survival of TNBC by IFN clusters\")\nlegend(x=\"bottomleft\", c(\"IFN Low\", \"IFN High\"), \n       fill=c(\"darkblue\",\"red\"), bty=\"n\")\ncox.fit <- coxph(my.surv ~ surv[,1])\nsummary(cox.fit)\n\n# clinical factors\npn_split <- split(tnbc_hc$mycl_named, tnbc_hc$pn_tumor)\npt_split <- split(tnbc_hc$mycl_named, tnbc_hc$pt_tumor)\nstage_split <- split(tnbc_hc$mycl_named, tnbc_hc$stage_tumor)\n\npn_table <- sapply(pn_split, table)\npt_table <- sapply(pt_split, table)\nstage_table <- sapply(stage_split, table)\n\npn_chi <- chisq.test(pn_table)\npt_chi <- chisq.test(pt_table)\nstage_chi <- chisq.test(stage_table)\n\npn_percent <- prop.table(pn_table, 2)\npt_percent <- prop.table(pt_table, 2)\nstage_percent <- prop.table(stage_table, 2)\n\nbarplot(pn_percent, col=c(\"darkblue\", \"red\"), legend=c(\"IFN Signature Low\", \"IFN Signature High\"), ylab=\"Percent high/low\")\nbarplot(pt_percent, col=c(\"darkblue\", \"red\"), legend=c(\"IFN Signature Low\", \"IFN Signature High\"), ylab=\"Percent high/low\")\nbarplot(stage_percent, col=c(\"darkblue\", \"red\"), legend=c(\"IFN Signature Low\", \"IFN Signature High\"), ylab=\"Percent high/low\")\n\n# regression\nresults_hc$mycl <- as.factor(results_hc$mycl)\nifng_lm <- lm(IFNG~pt_tumor+pn_tumor+stage_tumor+clinical_group+mycl, data=results_hc)\n\n# plot heatmap\nsignatures <- results_hc[,c(\"Fan\", \"Reactome\", \"Rody\", \"Teschendorff\")]\n\ncol_mat <- matrix(NA, nrow(results_hc), 2)\ncol_mat[,1] <- as.character(results_hc$mycl_named)\ncol_mat[,2] <- as.character(results_hc$mycl_named)\ncol_mat <- replace(col_mat, col_mat==\"1\", \"red\")\ncol_mat <- replace(col_mat, col_mat==\"0\", \"blue\")\nheatmap.plus(as.matrix(signatures), col=bluered(51), RowSideColors=col_mat, scale=\"none\",\n             labRow=\"\", cexCol=3, margins=c(16,6))\n\n# correlations\ncor(results_hc$Fan, results_hc$Reactome)\ncor(results_hc$Fan, results_hc$Rody)\ncor(results_hc$Fan, results_hc$Teschendorff)\ncor(results_hc$Fan, results_hc$IFNG)\ncor(results_hc$Rody, results_hc$Reactome)\ncor(results_hc$Rody, results_hc$Teschendorff)\ncor(results_hc$Rody, results_hc$IFNG)\ncor(results_hc$Reactome, results_hc$Teschendorff)\ncor(results_hc$Reactome, results_hc$IFNG)\ncor(results_hc$Teschendorff, results_hc$IFNG)\n\n\n\n",
    "created" : 1468471006389.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "151457514",
    "id" : "A1FFB1BB",
    "lastKnownWriteTime" : 1466871558,
    "last_content_update" : 1466871558,
    "path" : "~/jack/IFN/jack_inf_rstudio/gsva.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
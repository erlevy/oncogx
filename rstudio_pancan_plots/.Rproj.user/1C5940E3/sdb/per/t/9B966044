{
    "collab_server" : "",
    "contents" : "library(OIsurv)\nlibrary(cgdsr)\nlibrary(cluster)\nlibrary(fpc)\nlibrary(gplots)\nlibrary(heatmap.plus)\nlibrary(reshape2)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(plotrix)\nlibrary(VennDiagram)\nlibrary(ggrepel)\n\nresults <- read.csv(\"/Users/Eric/tcrseq/new/final/pancan_results_8-10-2016.txt\", sep=\"\\t\")\nclonotypes <- read.csv(\"/Users/Eric/tcrseq/new/final/pancan_clonotypes_8-10-2016.txt\", sep=\"\\t\")\n\ncdr3_results_current <- results\ncancer_current <- cdr3_results_current\n# remove cohort size <400\n# BLCA, BRCA, COAD, HNSC, KIRC, LGG, LUAD, LUSC, OV, PRAD, STAD, THCA, UCEC\n#cancer_current <- filter(cdr3_results_current, cohort==\"BLCA\" | cohort==\"BRCA\" | cohort==\"COAD\" | cohort==\"HNSC\" |\n#                       cohort==\"KIRC\" | cohort==\"LGG\" | cohort==\"LUAD\" | cohort==\"LUSC\" | cohort==\"OV\" |\n#                       cohort==\"PRAD\" | cohort==\"STAD\" | cohort==\"THCA\" | cohort==\"UCEC\")\n#cancer_current$cohort <- factor(cancer_current$cohort)\n#cancer_split <- split(cancer_current, cancer_current$cohort)\n\n# remove THYM since it only has ONE exome case, UVM and CHOL have no RNA\ncancer_current <- filter(cdr3_results_current, cohort != \"THYM\", cohort != \"UVM\", cohort != \"CHOL\")\ncancer_current$cohort <- factor(cancer_current$cohort)\ncancer_split <- split(cancer_current, cancer_current$cohort)\n\n# gsva table\n#gsva_table <- sapply(gsva_cluster_split, table)\n#gsva_percent <- prop.table(gsva_table, 2)\n#barplot(gsva_percent) #, col=c(\"darkblue\", \"red\"), legend=c(\"ifng low\", \"ifng high\"), ylab=\"Percent high/low\")\n#gsva_table_df <- melt(gsva_table)\n#ggplot(gsva_table_df, aes(x=Var2, y=value, fill=Var1)) + geom_bar(stat=\"identity\", position=\"fill\") + labs(title=\"Fraction of patients by GSVA immune signature groupings\", x=\"Cohort\", y=\"Fraction\") + theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n# gsva facet plots\ncancer_heatmap <- cancer_current[!is.na(cancer_current$T.regs),]\ncancer_heatmap$gsva_annotated <- as.character(cancer_heatmap$gsva_cluster)\ncancer_heatmap<-mutate(cancer_heatmap,gsva_annotated=ifelse(gsva_annotated==\"1\",\"High\",as.character(gsva_annotated)))\ncancer_heatmap<-mutate(cancer_heatmap,gsva_annotated=ifelse(gsva_annotated==\"2\",\"Low\",as.character(gsva_annotated)))\ncancer_heatmap<-mutate(cancer_heatmap,gsva_annotated=ifelse(gsva_annotated==\"3\",\"Mixed_Innate\",as.character(gsva_annotated)))\ncancer_heatmap<-mutate(cancer_heatmap,gsva_annotated=ifelse(gsva_annotated==\"4\",\"Mixed_Adaptive\",as.character(gsva_annotated)))\n\n# to exclude: ACC, COAD, DLBC, ESCA, GBM, KICH, KIRC, KIRP, LGG, \n#             LIHC, MESO, PCPG, PRAD, READ, SARC, SKCM, TGCT, THCA, UCEC, USC\n# most interesting ones: BLCA, BRCA, CESC, HNSC, LUAD, LUSC, OV, PAAD, STAD\ncancer_heatmap$gsva_annotated <- factor(cancer_heatmap$gsva_annotated, levels=c(\"Low\", \"Mixed_Innate\", \"Mixed_Adaptive\", \"High\"))\n#lapply(split(cancer_heatmap, cancer_heatmap$cohort:cancer_heatmap$gsva_annotated), nrow)\ncancer_heatmap <- filter(cancer_heatmap, cohort == \"BLCA\" | cohort == \"BRCA\" | cohort == \"CESC\" |\n                           cohort == \"HNSC\" | cohort == \"LUAD\" | cohort == \"LUSC\" |\n                           cohort == \"OV\" | cohort == \"PAAD\" | cohort == \"STAD\")\n\n### FIGURE: gsva vs. cdr3 rpm facet plots ###\nggplot(cancer_heatmap, aes(x=gsva_annotated, y=log(exome_rpm,10))) + geom_boxplot() + labs(x=\"\", y=\"Normalized tumor DNA CDR3 fraction (log10)\") + facet_wrap(~cohort, ncol=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(text=element_text(size=14))\nggplot(cancer_heatmap, aes(x=gsva_annotated, y=log(rna_rpm,10))) + geom_boxplot() + labs(x=\"\", y=\"Normalized tumor RNA CDR3 fraction (log10)\") + facet_wrap(~cohort, ncol=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(text=element_text(size=14))\n#ggplot(cancer_heatmap, aes(x=gsva_annotated, y=log(blood_rpm,10))) + geom_boxplot() + labs(x=\"\", y=\"Blood exome CDR3 RPM (log10)\") + facet_wrap(~cohort, ncol=3) # + theme(text=element_text(size=16))\n\n\n# gsva\ncancer_heatmap <- cancer_current[!is.na(cancer_current$T.regs),]\n\nsignatures <- select(cancer_heatmap, cohort, T.regs:Neut)\ncohorts <- signatures[,1]\nsignatures <- signatures[,-1]\n\nsignature_cols <- c(\"T Regs\", \"T CD8\", \"T CD4 Naive\", \"T CD4 Mem. Resting\", \"T CD4 Mem. Activated\",\n                    \"T Folicular Helper\", \"T Gamma Delta\", \"B Naive\", \"B Memory\", \"Plasma\", \"NK Resting\",\n                    \"NK Activated\", \"Monocytes\", \"Macrophages M0\", \"Macrophages M1\", \"Macrophages M2\",\n                    \"Dendritic Resting\", \"Dendritic Activated\", \"Mast Resting\", \"Mast Activated\",\n                    \"Eosinophils\", \"Neutrophils\")\n\n# colors still not working, need to copy work form \"brca_final_paper.R\")\n#cohort_colors <- color.scale(as.numeric(cohorts), color.spec=\"bluerange\")\n#gsva_colors <- color.scale(as.numeric(cancer_heatmap$gsva_cluster), color.spec=\"bluerange\")\n#cohort_colors <- matrix(c(cohort_colors, cohort_colors), ncol=2, byrow=FALSE)\n\nheatmap.plus(as.matrix(signatures), col=bluered(51), scale=\"none\", Colv=NA, labRow=\"\",\n             labCol=signature_cols, RowSideColors=cohort_colors)\n\n#heatmap.plus(as.matrix(signatures), col=bluered(51), scale=\"none\", Colv=NA, labRow=\"\",\n#             labCol=signature_cols, cexCol=2, margins=c(22,6))\n\n\n# check OV trend\nov <- filter(cancer_heatmap, cohort==\"OV\")\nov_gsva <- split(ov, ov$gsva_annotated)\nt.test(ov_gsva$Low$exome_rpm, ov_gsva$High$exome_rpm)\n\n",
    "created" : 1470937744132.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "959509001",
    "id" : "9B966044",
    "lastKnownWriteTime" : 1475784890,
    "last_content_update" : 1475784890247,
    "path" : "~/tcrseq/new/rstudio_plots/gsva_correlation.R",
    "project_path" : "gsva_correlation.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
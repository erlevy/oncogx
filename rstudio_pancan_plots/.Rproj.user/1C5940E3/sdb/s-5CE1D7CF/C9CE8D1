{
    "collab_server" : "",
    "contents" : "library(OIsurv)\nlibrary(cgdsr)\nlibrary(cluster)\nlibrary(fpc)\nlibrary(gplots)\nlibrary(heatmap.plus)\nlibrary(reshape2)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(plotrix)\nlibrary(VennDiagram)\nlibrary(ggrepel)\n\nresults <- read.csv(\"/Users/Eric/tcrseq/new/final/pancan_results_8-10-2016.txt\", sep=\"\\t\")\nclonotypes <- read.csv(\"/Users/Eric/tcrseq/new/final/pancan_clonotypes_8-10-2016.txt\", sep=\"\\t\")\n\ncdr3_results_current <- results\ncancer_current <- cdr3_results_current\n# remove cohort size <400\n# BLCA, BRCA, COAD, HNSC, KIRC, LGG, LUAD, LUSC, OV, PRAD, STAD, THCA, UCEC\n#cancer_current <- filter(cdr3_results_current, cohort==\"BLCA\" | cohort==\"BRCA\" | cohort==\"COAD\" | cohort==\"HNSC\" |\n#                       cohort==\"KIRC\" | cohort==\"LGG\" | cohort==\"LUAD\" | cohort==\"LUSC\" | cohort==\"OV\" |\n#                       cohort==\"PRAD\" | cohort==\"STAD\" | cohort==\"THCA\" | cohort==\"UCEC\")\n#cancer_current$cohort <- factor(cancer_current$cohort)\n#cancer_split <- split(cancer_current, cancer_current$cohort)\n\n# remove THYM since it only has ONE exome case, UVM and CHOL have no RNA\ncancer_current <- filter(cdr3_results_current, cohort != \"THYM\", cohort != \"UVM\", cohort != \"CHOL\")\ncancer_current$cohort <- factor(cancer_current$cohort)\ncancer_split <- split(cancer_current, cancer_current$cohort)\n\n# contrast infiltration of cancer types\nexome_split <- lapply(cancer_split, '[[', \"exome_rpm\")\nrna_split <- lapply(cancer_split, '[[', \"rna_rpm\")\nblood_split <- lapply(cancer_split, '[[', \"blood_rpm\")\nidna_split <- lapply(cancer_split, '[[', \"iDNA_score\")\n\n#ggplot(cancer_current, aes(x=exome_rpm, y=rna_rpm, colour=cohort)) + geom_point()\n\n#exome_avg <- sapply(exome_split, mean, na.rm=TRUE)\n#rna_avg <- sapply(rna_split, mean, na.rm=TRUE)\nexome_avg <- log(sapply(exome_split, mean, na.rm=TRUE), 10)\nrna_avg <- log(sapply(rna_split, mean, na.rm=TRUE), 10)\ncohort_sizes <- table(cancer_current$cohort)\navgs_plot <- as.data.frame(cbind(exome_avg, rna_avg, cohort_sizes))\n\n### FIGURE: average RNA vs. tumor exome RPM by cohort ###\n\n#ggplot(avgs_plot, aes(exome_avg, rna_avg, size=cohort_sizes, colour=rownames(avgs_plot))) + geom_point() + labs(title=\"Cohort average exome and RNA RPM\", x=\"log(exome CDR3 rpm)\", y=\"log(RNA CDR3 rpm)\")\nggplot(avgs_plot, aes(exome_avg, rna_avg)) + geom_point() + labs(x=\"exome CDR3 rpm (log10)\", y=\"RNA CDR3 rpm (log10)\") + geom_text_repel(data=avgs_plot, aes(label=rownames(avgs_plot)), size=6) + theme(text=element_text(size=16))\n\n### FIGURE: Venn diagram/overall profiling of cohort sizes ###\n\n# overall profiling\nexome_n <- nrow(filter(cancer_current, !is.na(exome_rpm)))\nrna_n <- nrow(filter(cancer_current, !is.na(rna_rpm)))\nblood_n <- nrow(filter(cancer_current, !is.na(blood_rpm)))\nexome_rna_n <- nrow(filter(cancer_current, !is.na(rna_rpm) & !is.na(exome_rpm)))\nexome_blood_n <- nrow(filter(cancer_current, !is.na(blood_rpm) & !is.na(exome_rpm)))\nblood_rna_n <- nrow(filter(cancer_current, !is.na(rna_rpm) & !is.na(blood_rpm)))\nexome_rna_blood_n <- nrow(filter(cancer_current, !is.na(rna_rpm) & !is.na(exome_rpm) & !is.na(blood_rpm)))\n\ngrid.newpage()\ndraw.triple.venn(area1 = exome_n, area2 = rna_n, area3 = blood_n, \n                n12 = exome_rna_n, n23 = blood_rna_n, n13 = exome_blood_n,\n                n123 = exome_rna_blood_n, fill = c(\"skyblue\", \"orange\", \"green\"),\n                category = c(\"Tumor exome\", \"Tumor RNA\", \"Blood exome\"), cex=2, cat.cex=2, \n                cat.pos=c(-10,10,180), cat.dist=c(0.05, 0.05, 0.05))\n\nexome_rna_blood <- filter(cancer_current, !is.na(rna_rpm) & !is.na(exome_rpm) & !is.na(blood_rpm))\n\n# initial numbers\nexome_pos <- filter(cancer_current, exome_rpm>0)\nrna_pos <- filter(cancer_current, rna_rpm>0)\nblood_pos <- filter(cancer_current, blood_rpm>0)\n\n### FIGURE: cohort size barplot ###\n\ncohort_sizes <- as.data.frame(table(exome_rna_blood$cohort))\nggplot(cohort_sizes, aes(x=reorder(Var1, -Freq), y=Freq)) + geom_bar(stat=\"identity\") + labs(x=\"Cohort\", y=\"Number of patients\") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(text=element_text(size=16))\n\n### FIGURE: compare read counts of tumor exome and RNA by cohort ###\n\n# contrast read counts of cancer types\nexome_read_split <- lapply(cancer_split, '[[', \"exome_reads\")\nrna_read_split <- lapply(cancer_split, '[[', \"rna_reads\")\npercent_tils_split <- lapply(cancer_split, '[[', \"percent_tils\")\ntcrb_rpm_split <- lapply(cancer_split, '[[', \"tcrb_rpm\")\ntcrb_rpm_log_split <- lapply(tcrb_rpm_split, FUN=log)\ngsva_cluster_split <- lapply(cancer_split, '[[', \"gsva_cluster\")\n\nexome_read_melt <- melt(exome_read_split)\nexome_read_melt$value <- log(exome_read_melt$value, 10)\nggplot(exome_read_melt, aes(x=L1, y=value)) + geom_boxplot() + labs(title=\"Exome read counts by cohort\", x=\"Cohort\", y=\"log(read count)\")\n\nrna_read_melt <- melt(rna_read_split)\nrna_read_melt$value <- log(rna_read_melt$value, 10)\nggplot(rna_read_melt, aes(x=L1, y=value)) + geom_boxplot() + labs(title=\"RNA read counts by cohort\", x=\"Cohort\", y=\"log(read count)\")\n\n# iDNA vs purity for cancer types\nfrac_pure<-aggregate(patient_purity~iDNA_score,data=cancer_current,FUN=function(x) length(x[x>=0.80])/length(x))\nggplot(frac_pure,aes(factor(reorder(iDNA_score,as.numeric(iDNA_score))),patient_purity))+geom_bar(stat=\"identity\")+theme(text=element_text(size=32))+xlab(\"iDNA score\")+ylab(\"Fraction of tumors with â‰¥80% purity\")+theme_classic(base_size = 24)\n\n# exome vs. blood\n# run clonotypes_analysis.R first\nexome_only <- filter(clonotypes, exome > 0)\nexome_pos_n <- length(unique(exome_pos$aa))\nblood_pos_n <- length(unique(blood_pos$aa))\nboth_n <- length(unique(intersect(exome_pos$aa, blood_pos$aa)))\n\n# distribution of cohorts with \"sticky\" clonotype\nshared_patients <- exome_blood_shared_patients_only_c66\nshared_patients_results <- filter(cancer_current, patient_uuid %in% shared_patients)\nexome_blood_or_n_patients <- filter(cancer_current, !is.na(exome_rpm) | !is.na(blood_rpm))$patient_uuid\nexome_blood_baseline <- filter(cancer_current, patient_uuid %in% exome_blood_or_n_patients)\nshared_patients_df <- data.frame(table(shared_patients_results$cohort), table(exome_blood_baseline$cohort))\nshared_patients_df <- filter(shared_patients_df, Freq>0)\ncolnames(shared_patients_df)[1] <- \"Cohort\"\nshared_patients_df$Cohort <- factor(shared_patients_df$Cohort)\nshared_patients_df$Freq.2 <- shared_patients_df$Freq/shared_patients_df$Freq.1\n\n### FIGURE: c66 cohort fraction barplot ###\nggplot(shared_patients_df, aes(x=reorder(Cohort, -Freq.2), y=Freq.2)) + geom_bar(stat=\"identity\") + labs(x=\"Cohort\", y=\"Fraction of patients\") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(text=element_text(size=16))\n\n# distribution of cohorts without \"sticky\" clonotype\nnon_shared_patients <- exome_blood_shared_patients_no_c66\nnon_shared_patients_results <- filter(cancer_current, patient_uuid %in% non_shared_patients)\nnon_shared_patients_df <- data.frame(table(non_shared_patients_results$cohort), table(exome_blood_baseline$cohort))\nnon_shared_patients_df <- filter(non_shared_patients_df, Freq>0)\ncolnames(non_shared_patients_df)[1] <- \"Cohort\"\nnon_shared_patients_df$Cohort <- factor(non_shared_patients_df$Cohort)\nnon_shared_patients_df$Freq.2 <- non_shared_patients_df$Freq/non_shared_patients_df$Freq.1\n\n### FIGURE: non c66 cohort fraction barplot ###\nggplot(non_shared_patients_df, aes(x=reorder(Cohort, -Freq.2), y=Freq.2)) + geom_bar(stat=\"identity\") + labs(x=\"Cohort\", y=\"Fraction of patients\") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(text=element_text(size=16))\n\n# profile gender with c66\nshared_patients_gender_df <- data.frame(table(shared_patients_results$gender), table(exome_blood_baseline$gender))\nshared_patients_gender_table <- matrix(c(303, 4262, 45, 4485), nrow=2, byrow=TRUE)\nnon_shared_patients_gender_df <- data.frame(table(non_shared_patients_results$gender), table(exome_blood_baseline$gender))\nnon_shared_patients_gender_table <- matrix(c(124, 4441, 95, 4435), nrow=2, byrow=TRUE)\n\npublic_clonotypes_results <- filter(cancer_current, as.character(patient_uuid) %in% public_patients)\nexome_rna_blood_or_n_patients <- filter(cancer_current, !is.na(rna_rpm) | !is.na(exome_rpm) | !is.na(blood_rpm))$patient_uuid\npublic_clonotypes_baseline <- filter(cancer_current, patient_uuid %in% exome_rna_blood_or_n_patients)\ntable(public_clonotypes_results$cohort)\n\n# coverage vs c66\nexome_blood_non_c66 <- filter(cancer_current, patient_uuid %in% exome_or_blood_patients)\nexome_blood_non_c66 <- filter(exome_blood_non_c66, !(patient_uuid %in% exome_blood_shared_patients_only_c66))\nt.test(shared_patients_results$exome_reads, exome_blood_non_c66$exome_reads)\nt.test(shared_patients_results$blood_reads, exome_blood_non_c66$blood_reads)\n\nexome_blood_non_public <- filter(cancer_current, patient_uuid %in% exome_or_blood_patients)\nexome_blood_non_public <- filter(exome_blood_non_public, !(patient_uuid %in% exome_blood_shared_patients_no_c66))\nt.test(shared_patients_results$exome_reads, exome_blood_non_c66$exome_reads)\nt.test(shared_patients_results$blood_reads, exome_blood_non_c66$blood_reads)\n\n# exome CDR3 high without RNA\nexome_pos_rna_neg <- filter(cancer_current,D==\"D+\",R==\"R-\")\nexome_pos_rna_pos <- filter(cancer_current,D==\"D+\",R==\"R+\")\nexome_rpm_list <- list(rna_neg=-log(exome_pos_rna_neg$exome_rpm,10), rna_pos=-log(exome_pos_rna_pos$exome_rpm))\nexome_rpm_melt <- melt(exome_rpm_list)\n#ggplot(exome_rpm_melt, aes(x=L1, y=value)) + geom_boxplot() + labs(title=\"Exome RPM by RNA CDR3 nonzero\", x=\"RNA CDR3\", y=\"-log(exome rpm)\")\n\nexome_med <- median(filter(cancer_current, exome_rpm>0)$exome_rpm)\nexome_pos_rna_neg_high <- filter(exome_pos_rna_neg, exome_rpm > exome_med)\nexome_pos_rna_neg_df <- data.frame(table(exome_pos_rna_neg_high$cohort), table(exome_pos_rna_neg$cohort))\ncolnames(exome_pos_rna_neg_df)[1] <- \"Cohort\"\n#ggplot(clonotypes_cohort_df, aes(x=Var1, y=Freq)) + geom_bar(stat=\"identity\") + labs(title=\"Percent of cohort that has a public clonotype\", x=\"Cohort\", y=\"Percent\")\nggplot(exome_pos_rna_neg_df, aes(Freq, Freq.1)) + geom_point() + labs(title=\"Number of D+R- patients with any exome RPM vs high by cohort\", x=\"Number of patients with high exome CDR3\", y=\"Number of D+R- patients\") + geom_text_repel(data=exome_pos_rna_neg_df, aes(label=Cohort))\n\nexome_pos_rna_neg_frac_df <- data.frame(table(exome_pos_rna_neg_high$cohort)/table(exome_pos_rna_neg$cohort))\ncolnames(exome_pos_rna_neg_df)[1] <- \"Cohort\"\nggplot(exome_pos_rna_neg_frac_df, aes(x=Var1, y=Freq)) + geom_bar(stat=\"identity\") + labs(title=\"Fraction of D+R- patients with high exome RPM by cohort\", x=\"Cohort\", y=\"Percent\")\n\nexome_pos_vs_rna_df <- data.frame(table(exome_pos_rna_neg$cohort), table(exome_pos_rna_pos$cohort))\nexome_pos_vs_rna_df <- filter(exome_pos_vs_rna_df, Freq>0)\nexome_pos_vs_rna_df$Var1.1 <- NULL\ncolnames(exome_pos_vs_rna_df)[1] <- \"Cohort\"\ncolnames(exome_pos_vs_rna_df)[2] <- \"D+R-\"\ncolnames(exome_pos_vs_rna_df)[3] <- \"D+R+\"\nexome_pos_vs_rna_df$Cohort <- factor(exome_pos_vs_rna_df$Cohort)\nexome_pos_vs_rna_df_melt <- melt(exome_pos_vs_rna_df)\n\nggplot(exome_pos_vs_rna_df_melt, aes(x=Cohort, y=value, fill=variable)) + geom_bar(stat=\"identity\", position=\"fill\") + labs(x=\"Cohort\", y=\"Fraction\") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(text=element_text(size=16))\n\n### FIGURE: non c66 cohort fraction barplot ###\nggplot(non_shared_patients_df, aes(x=reorder(Cohort, -Freq.2), y=Freq.2)) + geom_bar(stat=\"identity\") + labs(x=\"Cohort\", y=\"Fraction of patients\") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(text=element_text(size=16))\n\n# rna vs. dna\n\n# gsva table\ngsva_table <- sapply(gsva_cluster_split, table)\ngsva_percent <- prop.table(gsva_table, 2)\n#barplot(gsva_percent) #, col=c(\"darkblue\", \"red\"), legend=c(\"ifng low\", \"ifng high\"), ylab=\"Percent high/low\")\ngsva_table_df <- melt(gsva_table)\nggplot(gsva_table_df, aes(x=Var2, y=value, fill=Var1)) + geom_bar(stat=\"identity\", position=\"fill\") + labs(title=\"Fraction of patients by GSVA immune signature groupings\", x=\"Cohort\", y=\"Fraction\") + theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n# gsva facet plots\ncancer_heatmap <- cancer_current[!is.na(cancer_current$T.regs),]\ncancer_heatmap$gsva_annotated <- as.character(cancer_heatmap$gsva_cluster)\ncancer_heatmap<-mutate(cancer_heatmap,gsva_annotated=ifelse(gsva_annotated==\"1\",\"High\",as.character(gsva_annotated)))\ncancer_heatmap<-mutate(cancer_heatmap,gsva_annotated=ifelse(gsva_annotated==\"2\",\"Low\",as.character(gsva_annotated)))\ncancer_heatmap<-mutate(cancer_heatmap,gsva_annotated=ifelse(gsva_annotated==\"3\",\"Mixed_Innate\",as.character(gsva_annotated)))\ncancer_heatmap<-mutate(cancer_heatmap,gsva_annotated=ifelse(gsva_annotated==\"4\",\"Mixed_Adaptive\",as.character(gsva_annotated)))\n\n# to exclude: ACC, COAD, DLBC, KICH, READ, TGCT\n# most interesting ones: BLCA, BRCA, CESC, HNSC, LUAD, LUSC, OV, PAAD, STAD\ncancer_heatmap$gsva_annotated <- factor(cancer_heatmap$gsva_annotated, levels=c(\"Low\", \"Mixed_Innate\", \"Mixed_Adaptive\", \"High\"))\ncancer_heatmap <- filter(cancer_heatmap, cohort == \"BLCA\" | cohort == \"BRCA\" | cohort == \"CESC\" |\n                         cohort == \"HNSC\" | cohort == \"LUAD\" | cohort == \"LUSC\" |\n                         cohort == \"OV\" | cohort == \"PAAD\" | cohort == \"STAD\")\n\n### FIGURE: gsva vs. cdr3 rpm facet plots ###\nggplot(cancer_heatmap, aes(x=gsva_annotated, y=log(exome_rpm,10))) + geom_boxplot() + labs(x=\"\", y=\"Tumor exome CDR3 RPM (log10)\") + facet_wrap(~cohort, ncol=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) # + theme(text=element_text(size=16))\nggplot(cancer_heatmap, aes(x=gsva_annotated, y=log(rna_rpm,10))) + geom_boxplot() + labs(x=\"\", y=\"Tumor RNA CDR3 RPM (log10)\") + facet_wrap(~cohort, ncol=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))# + theme(text=element_text(size=16))\n#ggplot(cancer_heatmap, aes(x=gsva_annotated, y=log(blood_rpm,10))) + geom_boxplot() + labs(x=\"\", y=\"Blood exome CDR3 RPM (log10)\") + facet_wrap(~cohort, ncol=3) # + theme(text=element_text(size=16))\n\n\n# gsva\ncancer_heatmap <- cancer_current[!is.na(cancer_current$T.regs),]\n\nsignatures <- select(cancer_heatmap, cohort, T.regs:Neut)\ncohorts <- signatures[,1]\nsignatures <- signatures[,-1]\n\nsignature_cols <- c(\"T Regs\", \"T CD8\", \"T CD4 Naive\", \"T CD4 Mem. Resting\", \"T CD4 Mem. Activated\",\n                    \"T Folicular Helper\", \"T Gamma Delta\", \"B Naive\", \"B Memory\", \"Plasma\", \"NK Resting\",\n                    \"NK Activated\", \"Monocytes\", \"Macrophages M0\", \"Macrophages M1\", \"Macrophages M2\",\n                    \"Dendritic Resting\", \"Dendritic Activated\", \"Mast Resting\", \"Mast Activated\",\n                    \"Eosinophils\", \"Neutrophils\")\n\n# colors still not working, need to copy work form \"brca_final_paper.R\")\ncohort_colors <- color.scale(as.numeric(cohorts), color.spec=\"bluerange\")\ngsva_colors <- color.scale(as.numeric(cancer_heatmap$gsva_cluster), color.spec=\"bluerange\")\ncohort_colors <- matrix(c(cohort_colors, cohort_colors), ncol=2, byrow=FALSE)\n\nheatmap.plus(as.matrix(signatures), col=bluered(51), scale=\"none\", Colv=NA, labRow=\"\",\n             labCol=signature_cols, RowSideColors=cohort_colors)\n\n#heatmap.plus(as.matrix(signatures), col=bluered(51), scale=\"none\", Colv=NA, labRow=\"\",\n#             labCol=signature_cols, cexCol=2, margins=c(22,6))\n\n# clonal diversity\n\n\n# survival\nsurv_results_exome <- function(surv_matrix)\n{\n  surv <- surv_matrix[,c(\"exome_level\", \"days_compound\", \"vital_status\")]\n  surv$days_compound <- surv_matrix$days_compound/365\n  my.surv <- Surv(as.numeric(surv[,2]), as.numeric(surv[,3]))\n  my.fit <- survfit(my.surv ~ surv[,1])\n  #  plot(my.fit, col=c(1,2), main=\"Survival of HR+ by CDR3 groups\", xlab=\"Survival Time (years)\", ylab=\"Survival Probability\")\n  #  legend(0.5,0.4, c(\"nonzero\", \"zero\"), fill=c(1,2), cex=0.75)\n  coxph(my.surv ~ surv[,1], method=\"breslow\")  \n}\n\nsurv_results_RNA <- function(surv_matrix)\n{\n  surv <- surv_matrix[,c(\"RNA_level\", \"days_compound\", \"vital_status\")]\n  surv$days_compound <- surv_matrix$days_compound/365\n  my.surv <- Surv(as.numeric(surv[,2]), as.numeric(surv[,3]))\n  my.fit <- survfit(my.surv ~ surv[,1])\n  #  plot(my.fit, col=c(1,2), main=\"Survival of HR+ by CDR3 groups\", xlab=\"Survival Time (years)\", ylab=\"Survival Probability\")\n  #  legend(0.5,0.4, c(\"nonzero\", \"zero\"), fill=c(1,2), cex=0.75)\n  coxph(my.surv ~ surv[,1], method=\"breslow\")  \n}\n\ntypes <- split(cancer_current, cancer_current$cohort)\ntypes_surv_exome <- lapply(types, surv_results_exome)\ntypes_surv_RNA <- lapply(types, surv_results_RNA)\n\n### FIGURE: COAD survival by exome CDR3 RPM ###\npdf(\"coad_exome_cdr3_survival.pdf\", width=8, height=8)\nmar.default <- c(5.1, 4.1, 4.1, 2.1)\noma.default <- c(0,0,0,0)\npar(mar = mar.default + c(1,1,0,0))\npar(oma = oma.default + c(0,1,0,0))\nsurv_matrix <- types$COAD\nsurv <- surv_matrix[,c(\"exome_level\", \"days_compound\", \"vital_status\")]\nsurv$days_compound <- surv_matrix$days_compound/365\nmy.surv <- Surv(as.numeric(surv[,2]), as.numeric(surv[,3]))\nmy.fit <- survfit(my.surv ~ surv[,1])\nplot(my.fit, col=c(1,2), xlab=\"Survival Time (years)\", ylab=\"Survival Probability\", \n     cex.axis=1.75, cex.lab=2.25, cex.main=1.75, lwd=4, cex=2)\nlegend(x=\"bottomright\", c(\"Zero\", \"Nonzero\"), fill=c(1,2), cex=2, bty=\"n\")\nsurvdiff(my.surv ~ surv[,1])\ntext(x=9.5, y=0.95, labels=\"p=0.0006\", cex=2)\ndev.off()\ncox.fit <- coxph(my.surv ~ surv[,1])\nsummary(cox.fit)\n\n### FIGURE: CESC survival by RNA CDR3 RPM ###\npdf(\"cesc_rna_cdr3_survival.pdf\", width=8, height=8)\nmar.default <- c(5.1, 4.1, 4.1, 2.1)\noma.default <- c(0,0,0,0)\npar(mar = mar.default + c(1,1,0,0))\npar(oma = oma.default + c(0,1,0,0))\nsurv_matrix <- types$CESC\nsurv <- surv_matrix[,c(\"RNA_level\", \"days_compound\", \"vital_status\")]\nsurv$days_compound <- surv_matrix$days_compound/365\nmy.surv <- Surv(as.numeric(surv[,2]), as.numeric(surv[,3]))\nmy.fit <- survfit(my.surv ~ surv[,1])\nplot(my.fit, col=c(1,2), xlab=\"Survival Time (years)\", ylab=\"Survival Probability\", \n     cex.axis=1.75, cex.lab=2.25, cex.main=1.75, lwd=4, cex=2)\nlegend(x=\"bottomright\", c(\"Low\", \"High\"), fill=c(1,2), cex=2, bty=\"n\")\nsurvdiff(my.surv ~ surv[,1])\ntext(x=9.5, y=0.95, labels=\"p=0.004\", cex=2)\ndev.off()\ncox.fit <- coxph(my.surv ~ surv[,1])\nsummary(cox.fit)\n\n### OLD \n# figure FracRNA pos vs DNA\nfrac_withRNA<-aggregate(rna_rpm~iDNA_score,data=filter(cdr3_results_current,!is.na(rna_rpm)),FUN=function(x) length(x[x>0.0255])/length(x))\nggplot(frac_withRNA,aes(factor(reorder(iDNA_score,as.numeric(iDNA_score))),rna_rpm))+geom_bar(stat=\"identity\")+theme(text=element_text(size=32))+xlab(\"iDNA score\")+ylab(\"Fraction of tumors \\n with high RNA CDR3 RPM\")+theme_classic(base_size = 24)\n\n#figure FracTIL vs DNA\nfrac_withTILs<-aggregate(percent_tils~iDNA_score,data=cdr3_results_current,FUN=function(x) length(x[x>=5])/length(x))\nggplot(frac_withTILs,aes(factor(reorder(iDNA_score,as.numeric(iDNA_score))),percent_tils))+geom_bar(stat=\"identity\")+theme(text=element_text(size=32))+xlab(\"iDNA score\")+ylab(\"Fraction of tumors with â‰¥5% TILs\")+theme_classic(base_size = 24)\n\n# distribution by clinical groups\nggplot(cdr3_results_current,aes(as.factor(iDNA_score),fill=cohort))+geom_bar(position=\"fill\")+theme_classic(base_size = 24)+ylab(\"Fraction of tumors\")+xlab(\"iDNA score\")+theme(legend.title=element_blank())\n\n# survival\n\n",
    "created" : 1470845855847.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1887495774",
    "id" : "C9CE8D1",
    "lastKnownWriteTime" : 1470845959,
    "last_content_update" : 1470845959229,
    "path" : "~/tcrseq/new/rstudio_plots/data_analysis2.R",
    "project_path" : "data_analysis2.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
tmp<-select(filter(cdr3_results_current,exome_rpm!=0),patient_uuid,exome_rpm)
tmp<-mutate(tmp,iDNA_score=ntile(exome_rpm,10))
cdr3_results_current<-left_join(cdr3_results_current,tmp)
cdr3_results_current<-mutate(cdr3_results_current,iDNA_score=ifelse(is.na(iDNA_score),0,iDNA_score))
cdr3_results_current<-mutate(cdr3_results_current,rna_rpm=rna_cdr3*10^6/rna_reads)
cdr3_results_current<-mutate(cdr3_results_current,D=ifelse(exome_rpm==0,"D-","D+"),R=ifelse(rna_rpm==0,"R-","R+"))
#cdr3_results_current<-mutate(cdr3_results_current,blood_rpm=blood_cdr3*10^6/blood_reads)
#cdr3_results_current<-mutate(cdr3_results_current,tcrb_rpm=tcrb_reads*10^6/rna_reads)
#fraction of 5% TILs in each bin
#cdr3_results_current %>% group_by(iDNA_score) %>% summarize(length(percent_tils[percent_tils>=5])/length(percent_tils))
#association with TIL content
#wilcox.test(as.vector(unlist(select(filter(cdr3_results_current,percent_tils<=2),exome_rpm))),as.vector(unlist(select(filter(cdr3_results_current,percent_tils>2),exome_rpm))))
# comparing D+R+
#tmp<-select(mutate(cdr3_results_current,D=ifelse(exome_rpm==0,"D-","D+"),R=ifelse(rna_rpm==0,"R-","R+")),D,R)
#table(interaction(cdr3_results_current$D,cdr3_results_current$R))
### survival
### process days
cdr3_results_surv <- c()
for (i in 1:nrow(cdr3_results_current))
{
surv_row <- rep(NA, 3)
idna <- cdr3_results_current$iDNA_score[i]
days_to_death <- cdr3_results_current$days_to_death[i]
days_to_last_followup <- cdr3_results_current$days_to_last_followup[i]
vital <- NA
days <- NA
if (idna>0) {idna <- 1}
if (!is.na(days_to_death)) {
days <- days_to_death
vital <- 1
} else if (!is.na(days_to_last_followup)) {
days <- days_to_last_followup
vital <- 0
}
surv_row <- c(idna, days, vital)
cdr3_results_surv <- rbind(cdr3_results_surv, surv_row)
}
colnames(cdr3_results_surv) <- c("iDNA_nonzero", "days_compound", "vital_status")
rownames(cdr3_results_surv) <- seq(1:nrow(cdr3_results_surv))
cdr3_results_surv <- cbind(cdr3_results_current, cdr3_results_surv)
results_out_surv <- cbind(results, cdr3_results_surv$days_compound, cdr3_results_surv$vital_status)
colnames(results_out_surv)[45] <- "days_compound"
colnames(results_out_surv)[46] <- "vital_status"
write.table(results_out_surv, "/Users/Eric/tcrseq/new/processed/pancan_exome_rna_blood_tcrb_gsva_clinical_surv_7-30-2016.txt", sep="\t",
row.names=FALSE, quote=FALSE)
surv_results <- function(surv_matrix)
{
surv <- surv_matrix[,c("iDNA_nonzero", "days_compound", "vital_status")]
surv$days_compound <- surv_matrix$days_compound/365
my.surv <- Surv(as.numeric(surv[,2]), as.numeric(surv[,3]))
my.fit <- survfit(my.surv ~ surv[,1])
#  plot(my.fit, col=c(1,2), main="Survival of HR+ by CDR3 groups", xlab="Survival Time (years)", ylab="Survival Probability")
#  legend(0.5,0.4, c("nonzero", "zero"), fill=c(1,2), cex=0.75)
coxph(my.surv ~ surv[,1], method="breslow")
}
types <- split(cdr3_results_surv, cdr3_results_surv$cohort)
types_surv <- lapply(types, surv_results)
surv_matrix <- types$COAD
surv <- surv_matrix[,c("iDNA_nonzero", "days_compound", "vital_status")]
surv$days_compound <- surv_matrix$days_compound/365
my.surv <- Surv(as.numeric(surv[,2]), as.numeric(surv[,3]))
my.fit <- survfit(my.surv ~ surv[,1])
my.fit
plot(my.fit, col=c(1,2), main="Survival of COAD by CDR3 presence", xlab="Survival Time (years)", ylab="Survival Probability")
legend(5,0.4, c("zero", "nonzero"), fill=c(1,2), cex=0.75)
library(OIsurv)
library(cgdsr)
library(cluster)
library(fpc)
library(gplots)
library(heatmap.plus)
library(reshape2)
library(dplyr)
library(ggplot2)
library(plotrix)
library(VennDiagram)
library(ggrepel)
results <- read.csv("/Users/Eric/tcrseq/new/processed/pancan_exome_rna_blood_tcrb_gsva_clinical_surv_8-3-2016.txt", sep="\t")
clonotypes <- read.csv("/Users/Eric/tcrseq/new/processed/pancan_clonotypes_all_7-30-2016.txt", sep="\t")
### calculating the iDNA score, rna_rpm, R and D groups ###
cdr3_results_current<-results
cdr3_results_current<-mutate(cdr3_results_current,exome_rpm=exome_cdr3*10^6/exome_reads)
tmp<-select(filter(cdr3_results_current,exome_rpm!=0),patient_uuid,exome_rpm)
tmp<-mutate(tmp,iDNA_score=ntile(exome_rpm,10))
cdr3_results_current<-left_join(cdr3_results_current,tmp)
cdr3_results_current<-mutate(cdr3_results_current,iDNA_score=ifelse(is.na(iDNA_score),0,iDNA_score))
cdr3_results_current<-mutate(cdr3_results_current,rna_rpm=rna_cdr3*10^6/rna_reads)
cdr3_results_current<-mutate(cdr3_results_current,blood_rpm=blood_cdr3*10^6/blood_reads)
cdr3_results_current<-mutate(cdr3_results_current,tcrb_rpm=tcrb_reads*10^6/rna_reads)
cdr3_results_current<-mutate(cdr3_results_current,D=ifelse(exome_rpm==0,"D-","D+"),R=ifelse(rna_rpm==0,"R-","R+"))
cdr3_results_current<-mutate(cdr3_results_current,exome_level=ifelse(iDNA_score==0,"0","1"))
cdr3_results_current<-mutate(cdr3_results_current,RNA_level=ifelse(rna_rpm<median(cdr3_results_current$rna_rpm, na.rm=TRUE),"0","1"))
### recreate relevant results report ###
cancer_current <- cdr3_results_current
write.table(cancer_current, "/Users/Eric/tcrseq/new/final/pancan_results_8-10-2016.txt", quote=FALSE, sep="\t", row.names=FALSE)
cancer_current[1,]
write.table(clonotypes, "/Users/Eric/tcrseq/new/final/pancan_clonotypes_8-10-2016.txt", quote=FALSE, sep="\t", row.names=FALSE)
burden_dir <- "/Users/Eric/tcrseq/new/mutation/mutation_sample"
results <- read.csv("/Users/Eric/tcrseq/new/final/pancan_results_8-10-2016.txt", sep="\t")
results[1,]
i = 1
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type)
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt")
mutation_file <- read.csv(mutation_extension)
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
mutation_file <- read.csv(mutation_extension)
burden_dir <- "/Users/Eric/tcrseq/new/mutation/mutation_sample/"
results <- read.csv("/Users/Eric/tcrseq/new/final/pancan_results_8-10-2016.txt", sep="\t")
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
mutation_file <- read.csv(mutation_extension)
mutation_file[1,]
mutation_file <- read.csv(mutation_extension, sep="\t")
mutation_file[1,]
mutation_file[2,]
mutation_file[3,]
mutation_file[4,]
mutation_file[5,]
mutation_file[1,]
patient_uuid <- results$patient_uuid[i]
mutation_file[patient_uuid,]
rownames(mutatino_file)
rownames(mutation_file)
mutation_file[,2]
mutation_file[,1]
results$sample_barcode[1]
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
patient_barcode
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
row_match
mutation_file[392,]
mutation_file[392,"rate_non"]
burden <- rep(NA, nrow(results))
burden
burden <- rep(NA, nrow(results))
for (i in 1:results)
{
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_file)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
burden[i] <- nonsyn
}
i
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_file)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
mutation_file
burden <- rep(NA, nrow(results))
for (i in 1:results)
{
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
burden[i] <- nonsyn
}
i
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
nonsyn
burden[i] <- nonsyn
burden <- rep(NA, nrow(results))
for (i in 1:results)
{
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
burden[i] <- nonsyn
}
i
i = 1
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
burden[i] <- nonsyn
i = 2
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
burden[i] <- nonsyn
burden[1]
burden[2]
burden[3]
burden <- rep(NA, nrow(results))
for (i in 1:results)
{
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
burden[i] <- nonsyn
}
file.exists(mutation_extension)
burden_dir <- "/Users/Eric/tcrseq/new/mutation/mutation_sample/"
results <- read.csv("/Users/Eric/tcrseq/new/final/pancan_results_8-10-2016.txt", sep="\t")
burden <- rep(NA, nrow(results))
for (i in 1:results)
{
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
burden[i] <- nonsyn
}
i
i = 1
burden <- rep(NA, nrow(results))
for (i in 1:results)
{
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
burden[i] <- nonsyn
}
i
burden <- rep(NA, nrow(results))
for (i in 1:results)
{
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
burden[i] <- nonsyn
}
burden <- rep(NA, nrow(results))
for (i in 1:nrow(results))
{
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
burden[i] <- nonsyn
}
burden
i
burden <- rep(NA, nrow(results))
for (i in 1:nrow(results))
{
cancer_type <- as.character(results$cohort[i])
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
burden[i] <- nonsyn
}
i
results_sorted <- sort(results, results$cohort)
library(dplyr)
arrange(results, cohort)
arrange(results, cohort)[1,]
arrange(results, cohort)[2,]
results <- arrange(results, cohort)
burden <- rep(NA, nrow(results))
cancer_type_last <- ""
for (i in 1:nrow(results))
{
cancer_type <- as.character(results$cohort[i])
if (cancer_type!=cancer_type_last) {
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
}
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
nonsyn <- mutation_file[row_match, "rate_non"]
}
burden[i] <- nonsyn
}
i
i = 1943
cancer_type <- as.character(results$cohort[i])
if (cancer_type!=cancer_type_last) {
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
}
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
patient_barcode
mutation
mutation_extension[1,]
burden <- rep(NA, nrow(results))
cancer_type_last <- ""
for (i in 1:nrow(results))
{
cancer_type <- as.character(results$cohort[i])
if (cancer_type!=cancer_type_last) {
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
}
}
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
if (length(row_match)>0) {nonsyn <- mutation_file[row_match, "rate_non"]}
burden[i] <- nonsyn
}
i
nrow(results)
results <- arrange(results, cohort)
results$cohort
burden <- rep(NA, nrow(results))
cancer_type_last <- ""
mutation_file <- c()
for (i in 1:nrow(results))
{
cancer_type <- as.character(results$cohort[i])
if (cancer_type!=cancer_type_last) {
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
}
}
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
if (length(row_match)>0) {nonsyn <- mutation_file[row_match, "rate_non"]}
burden[i] <- nonsyn
}
10%100
10 %% 100
100 %% 100
100 %/% 100
100 %% 100
print(blah)
print("blah")
burden <- rep(NA, nrow(results))
cancer_type_last <- ""
mutation_file <- c()
for (i in 1:nrow(results))
{
cancer_type <- as.character(results$cohort[i])
if (cancer_type!=cancer_type_last) {
mutation_start <- paste(burden_dir, cancer_type, sep="")
mutation_extension <- paste(mutation_start, "-TP.samplefeatures.txt", sep="")
if (file.exists(mutation_extension)) {
mutation_file <- read.csv(mutation_extension, sep="\t")
}
}
nonsyn <- NA
patient_barcode <- substr(as.character(results$sample_barcode[i]), 1, 12)
# rate_non
row_match <- which(as.character(mutation_file[,1])==patient_barcode)
if (length(row_match)>0) {nonsyn <- mutation_file[row_match, "rate_non"]}
burden[i] <- nonsyn
if ((i %% 1000)==0) {print(i)}
}
burden
sum(is.na(burden))
nrow(burden)
length(burden)
nrow(results)
results_burden <- cbind(results, burden)
results_burden[1,]
colnames(results)
colnames(results_burden)
colnames(results_burden)[57]
colnames(results_burden)[57] <- "rate_non"
results_burden <- cbind(results, burden)
colnames(results_burden)[57] <- "rate_non"
write.table(results_burden, "/Users/Eric/tcrseq/new/final/pancan_results_8-28-2016.txt", sep="\t",
row.names=FALSE, quote=FALSE)
results_burden[10,]
results_burden[100,]
results_burden[1000,]
select(results_burden, rate_non)
select(results_burden, cohort, rate_non)
testy <- select(results_burden, cohort, rate_non)
split(testy$cohort, testy$rate_non)
split(testy, testy$cohort)
split(testy, testy$cohort)[[1]]
split(testy, testy$cohort)[[1]][1,]
split(testy, testy$cohort)[[1]][2,]
split(testy, testy$cohort)[[1]][3,]
group_by(testy, cohort)
group_by(testy, cohort)[1,]
group_by(testy, cohort)[2,]
group_by(testy, cohort)[3,]
group_by(testy, cohort)[4,]
group_by(testy, cohort)[5,]
group_by(testy, cohort)[6,]
summarise(results_burden, val=!is.na(rate_non))
summarise(results_burden, mean=mean(rate_non))
summarise(grouped_by(results_burden, cohort), mean=mean(rate_non))
grouped_by
group_by()
summarise(group_by(results_burden, cohort), mean=mean(rate_non))
summarise(group_by(results_burden, cohort), n=!is.na(rate_non))
summarise(group_by(results_burden, cohort), mean=mean(rate_non, na.rm=TRUE)
)
blah <- summarise(group_by(results_burden, cohort), mean=mean(rate_non, na.rm=TRUE))
blah
blah[,2]
View(blah)
source('~/tcrseq/new/rstudio_data/mutational_burden.R')
results_burden[1,]
results_burden[2,]
results_burden[1000,]
results_burden[5000,]
results_burden[10000,]
nrow(results_burden)
results_burden[10387,]
